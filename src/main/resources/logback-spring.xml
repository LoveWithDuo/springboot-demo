<!-- 级别从高到低 OFF 、 FATAL 、 ERROR 、 WARN 、 INFO 、 DEBUG 、 TRACE 、 ALL -->
<!-- 日志输出规则 根据当前ROOT 级别，日志输出时，级别高于root默认的级别时 会输出 -->
<!-- 以下 每个配置的 filter 是过滤掉输出文件里面，会出现高级别文件，依然出现低级别的日志信息，通过filter 过滤只记录本级别的日志 -->
<!-- scan 当此属性设置为true时，配置文件如果发生改变，将会被重新加载，默认值为true。 -->
<!-- scanPeriod 设置监测配置文件是否有修改的时间间隔，如果没有给出时间单位，默认单位是毫秒。当scan为true时，此属性生效。默认的时间间隔为1分钟。 -->
<!-- debug 当此属性设置为true时，将打印出logback内部日志信息，实时查看logback运行状态。默认值为false。 -->
<configuration scan="true" scanPeriod="60 seconds" debug="false">

	<!-- 动态日志级别 -->
    <jmxConfigurator />
    <!-- 定义日志文件 输出位置  /home/hadmin/data/logs/src -->
    <property name="log_dir" value="c:/logs/demo/" />
    <!-- 日志最大的历史 30天 -->
    <property name="maxHistory" value="30" />
    
    <contextName>demo</contextName>

    <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%contextName] [%-5p] %logger - %msg%n</pattern>
            <charset>UTF-8</charset>
        </encoder>
    </appender>

    <appender name="LOG.INFO" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${log_dir}info.%d{yyyy-MM-dd}.%i.log</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy
             class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <maxFileSize>10MB</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder class="ch.qos.logback.core.encoder.LayoutWrappingEncoder">
            <layout class="ch.qos.logback.classic.PatternLayout">
                <pattern>%d{yyyy-MM-dd HH:mm:ss} %logger - %msg%n</pattern>
            </layout>
        </encoder>
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>INFO</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
    </appender>
    
    <appender name="LOG.DEBUG" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${log_dir}debug.%d{yyyy-MM-dd}.%i.log</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy
             class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <maxFileSize>10MB</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder class="ch.qos.logback.core.encoder.LayoutWrappingEncoder">
            <layout class="ch.qos.logback.classic.PatternLayout">
                <pattern>%d{yyyy-MM-dd HH:mm:ss} %logger - %msg%n</pattern>
            </layout>
        </encoder>
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>DEBUG</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
    </appender>

    <appender name="LOG.ERROR" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${log_dir}error.%d{yyyy-MM-dd}.%i.log</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy
             class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <maxFileSize>10MB</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder class="ch.qos.logback.core.encoder.LayoutWrappingEncoder">
            <layout class="ch.qos.logback.classic.PatternLayout">
                <pattern>%d{yyyy-MM-dd HH:mm:ss} %logger - %msg%n</pattern>
            </layout>
        </encoder>
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>ERROR</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
    </appender>

    <property name="THIRD_PART_LIB_LEVEL" value="ERROR" />
    <property name="THIRD_PART_LIB_LEVEL1" value="INFO" />

    <logger name="cn.com.serp.common.mybatis" level="${THIRD_PART_LIB_LEVEL}" />
    <logger name="net.sf.ehcache" level="${THIRD_PART_LIB_LEVEL}" />
    <logger name="org.apache.mina" level="${THIRD_PART_LIB_LEVEL1}" />
    <logger name="org.mybatis" level="${THIRD_PART_LIB_LEVEL}" />
    <logger name="org.springframework" level="${THIRD_PART_LIB_LEVEL}" />
    <logger name="com.espertech" level="${THIRD_PART_LIB_LEVEL}"/>
    <logger name="org.apache.cxf" level="${THIRD_PART_LIB_LEVEL}"/>
    <logger name="org.atmosphere" level="${THIRD_PART_LIB_LEVEL}"/>
    <logger name="org.hibernate" level="${THIRD_PART_LIB_LEVEL}"/>
    <logger name="org.apache.ibatis" level="${THIRD_PART_LIB_LEVEL}"/>
    <logger name="ch.qos.logback" level="${THIRD_PART_LIB_LEVEL}"/>
    <logger name="com.alibaba.druid" level="${THIRD_PART_LIB_LEVEL}"/>
    
    <!-- log4jdbc相关打印信息都改为ERROR,避免太多重复 -->
    <logger name="jdbc.sqlonly" level="ERROR">
        <appender-ref ref="LOG.ERROR"/>
    </logger>
    <logger name="jdbc.audit" level="ERROR">
        <appender-ref ref="LOG.ERROR"/>
    </logger>
    <logger name="jdbc.resultset" level="ERROR">
        <appender-ref ref="LOG.ERROR"/>
    </logger>
    <logger name="jdbc.connection" level="ERROR">
        <appender-ref ref="LOG.ERROR"/>
    </logger>

    <root>
        <level value="INFO"/>
        <appender-ref ref="STDOUT"/>
        <appender-ref ref="LOG.DEBUG"/>
        <appender-ref ref="LOG.ERROR"/>
        <appender-ref ref="LOG.INFO"/>
    </root>

</configuration>